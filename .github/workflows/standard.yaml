on:
  push:
    branches:
      - main
      - develop
      - "feature/**"
      - "fix/**"
      - "release/**"
    paths-ignore:
      - "**/*.md"
      - .scafflater/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - .scafflater/**
  workflow_dispatch:
  repository_dispatch:
    types: ["Standard"]

name: Standard

env:
  app_name: "testes"
  aws_region: "us-east-1"
  dockerfilePath: "dockerfiles/Dockerfile"
  SLACK_WEBHOOK: ${{ vars.SLACK_WEBHOOK }}
  SLACK_WEBHOOK_DEPLOY: ${{ vars.SLACK_WEBHOOK_DEPLOY }}

jobs:
  ci_android:
    name: CI - Test Android
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Default Steps
        uses: ./.github/actions/setup-composite
      - name: üß™ Run Maestro Android tests
        run: |
          echo "Rodando testes no maestro cloud para Android"
        continue-on-error: true
      - name: ‚¨ÜÔ∏è Upload Maestro Android results
        uses: actions/upload-artifact@v4
        with:
          name: android-report
          path: android

  ci_ios:
    name: CI - Test iOS
    if: always ()
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Default Steps
        uses: ./.github/actions/setup-composite
      - name: üß™ Run Maestro iOS tests
        run: |
          echo "Rodando testes no maestro cloud para iOS"
        continue-on-error: true
      - name: ‚¨ÜÔ∏è Upload Maestro iOS results
        uses: actions/upload-artifact@v4
        with:
          name: ios-report
          path: ios

  report_slack:
    name: CI - Send Test Status to Slack
    needs: [ci_android, ci_ios]
    if: ${{ !github.event.client_payload }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Python Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: /opt/hostedtoolcache/Python/
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: pip-
      - name: ‚¨áÔ∏è Download Artifacts
        uses: actions/download-artifact@v4
      - run: ls
      - name: üìÅ Rename paths
        run: |
          mv android-report android
          mv ios-report ios
      - name: üì® Run Curl Message To Slack
        run: |
          echo "enviando report para o slack com o resultado dos testes de Homologa√ß√£o"
      - name: ‚¨ÜÔ∏è Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: report

  report_slack_deploy:
    name: CI - Report Tests Before Deploy
    needs: [ci_android, ci_ios]
    if: ${{ github.event.client_payload }}
    runs-on: ubuntu-latest
    env: 
      DEPLOY: true
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Python Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: /opt/hostedtoolcache/Python/
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: pip-
      - name: ‚¨áÔ∏è Download Artifacts
        uses: actions/download-artifact@v4
      - run: ls
      - name: üìÅ Rename paths
        run: |
          mv android-report android
          mv ios-report ios
      - name: üì® Run Curl Message To Slack
        run: |
          echo "enviando report para o slack com o resultado dos testes de Homologa√ß√£o em um esteira de deploy"
      - name: ‚¨ÜÔ∏è Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: report

  sonar:
    name: Sonar
    needs: [ci_android, ci_ios]
    if: always ()
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: ü§î Sonar Analysis
        uses: SonarSource/sonarcloud-github-action@master
        if: ${{ vars.SONAR_ENABLED == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

  dispatch:
    name: Dispatch Build
    needs: report_slack
    if: ${{ github.event.client_payload }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ['ORGANIZATION_NAME/REPO_NAME']
    timeout-minutes: 8
    env: 
      TOKEN_OTHER_REPO: ${{ secrets.TOKEN_OTHER_REPO }}
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: ‚¨áÔ∏è Download Artifacts
        uses: actions/download-artifact@v4
      - run: ls
      - name: üìÅ Rename paths
        run: |
          mv test-report report
      - name: Dispatch Build
        run: |
            chmod +x report.sh
            sh report.sh